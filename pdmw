#!/usr/bin/env sh

##############################################################################
##
##  PDM start up script for UN*X
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

APP_NAME="pdm"
APP_BASE_NAME=`basename "$0"`

warn () {
    echo "$*"
}

die () {
    echo
    echo "$*"
    echo
    exit 1
}

# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
  cd "$(dirname "$0")"
fi

if [ ! -f "$APP_HOME/pdm-version" ]; then
  # TODO install latest version and create pdm-version file
    die "ERROR: 'pdm-version' file not found"
fi
read PDM_VERSION<"$APP_HOME/pdm-version"

PDM_DIR="$APP_HOME/.pdm/$PDM_VERSION"

if [ ! -d "$PDM_DIR" ]; then
  # TODO will pip always be the expected one?
  PIP_CMD="pip"
  which $PIP_CMD >/dev/null 2>&1 || die "ERROR: 'pip' command could be found in your PATH"

  # TODO pip can report dependency conflicts but still successfully install pdm; we ignore these for now
  "$PIP_CMD" install --target "$PDM_DIR" "pdm==$PDM_VERSION" || true
fi

if [ -n "$PYTHONPATH" ]; then
    export PYTHONPATH=$PDM_DIR:$PYTHONPATH
else
    export PYTHONPATH=$PDM_DIR
fi

PDM_CMD="pdm"

exec "$PDM_CMD" "$@"
